name: Build & Test

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '20'
    - name: Build with ncc
      run: |
        npm install -g yarn
        yarn install
        yarn run build
    - name: Archive dist
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: dist

  yaml-test:
    needs: [ build ]
    runs-on: ubuntu-latest
    name: "yaml-test"
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Download dist
        uses: actions/download-artifact@v3
        with:
          name: build
          path: dist

      - name: Create artifact file
        shell: bash
        run: |
          mkdir -p data/files
          echo "This is artifact from build-test.yaml" >> data/files/file1.txt

      - name: crete artifact
        uses: actions/upload-artifact@v4
        id: file1
        with:
          path: data/files/file1.txt
          retention-days: 1
          name: file1

#      - uses: actions/cache/save@v4
#        id: cache_workaround
#        with:
#          path: data/files/file1.txt
#          key: ${{ github.run_id }}_file1

      - name: Invoke echo 3 workflow using this action
        uses: ./
        id: dispatch
        with:
          workflow: echo-3.yaml
          token: ${{ secrets.GITHUB_TOKEN }}
          wait-for-completion: true
          display-workflow-run-url: true
          inputs: | 
            message: "Mango jam"
            meta:
              file1_url: ${{ steps.file1.outputs.artifact-url }}
              first_name: John
              last_name: Doe

      - name: Get artefact from dispatched workflow
        uses: actions/download-artifact@v4
        with:
          run-id: '${{ dispatch.outputs.workflow-run-id }}'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          name: file2

      - name: print input file
        shell: bash
        run: |
          ls -al file1
          echo 'Received file:' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat file2/file2.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

